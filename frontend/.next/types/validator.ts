// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(auth)/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/brands/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brands">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/brands/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/ingredients/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ingredients/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/ingredients/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/ingredients/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ingredients">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/ingredients/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/[id]/contribute/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/[id]/contribute">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/[id]/contribute/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/appetite-suppressant/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/appetite-suppressant">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/appetite-suppressant/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/bcaa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/bcaa">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/bcaa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/creatine/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/creatine">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/creatine/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/eaa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/eaa">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/eaa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/energy-drink/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/energy-drink">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/energy-drink/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/fat-burner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/fat-burner">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/fat-burner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/pre-workout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/pre-workout">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/pre-workout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/products/protein-powder/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/protein-powder">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/products/protein-powder/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/rankings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/rankings">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/rankings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(user)/contributions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contributions">> = Specific
  const handler = {} as typeof import("../../src/app/(user)/contributions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(user)/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(user)/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(user)/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/(user)/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/owner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/owner">> = Specific
  const handler = {} as typeof import("../../src/app/admin/owner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/update-role/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/update-role">> = Specific
  const handler = {} as typeof import("../../src/app/admin/update-role/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contribute/new-product/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contribute/new-product">> = Specific
  const handler = {} as typeof import("../../src/app/contribute/new-product/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contribute/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contribute">> = Specific
  const handler = {} as typeof import("../../src/app/contribute/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/owner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner">> = Specific
  const handler = {} as typeof import("../../src/app/owner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/user/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/user/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/user/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/profile">> = Specific
  const handler = {} as typeof import("../../src/app/user/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/update-role/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/update-role">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/update-role/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/callback/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/callback">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/callback/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/me">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/contributions/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contributions/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/contributions/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/contributions/[id]/vote/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contributions/[id]/vote">> = Specific
  const handler = {} as typeof import("../../src/app/api/contributions/[id]/vote/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/contributions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contributions">> = Specific
  const handler = {} as typeof import("../../src/app/api/contributions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/ingredients/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ingredients/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/ingredients/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/ingredients/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ingredients">> = Specific
  const handler = {} as typeof import("../../src/app/api/ingredients/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/products/[id]/calculate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products/[id]/calculate">> = Specific
  const handler = {} as typeof import("../../src/app/api/products/[id]/calculate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/products/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/products/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products">> = Specific
  const handler = {} as typeof import("../../src/app/api/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/products/search/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products/search">> = Specific
  const handler = {} as typeof import("../../src/app/api/products/search/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/rankings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/rankings">> = Specific
  const handler = {} as typeof import("../../src/app/api/rankings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/users/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/users/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/users/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/users">> = Specific
  const handler = {} as typeof import("../../src/app/api/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/(auth)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(product)/description/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/description">> = Specific
  const handler = {} as typeof import("../../src/app/(product)/description/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(search)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(search)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(user)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/(user)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
