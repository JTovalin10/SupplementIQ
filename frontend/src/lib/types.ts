// Core application types for SupplementIQ

export interface User {
  id: string;
  email: string;
  username: string;
  avatar_url?: string;
  reputation_score: number;
  verification_level: 'unverified' | 'verified' | 'expert' | 'moderator';
  created_at: string;
  updated_at: string;
}

export interface Product {
  id: string;
  name: string;
  brand: string;
  category: ProductCategory;
  description?: string;
  image_url?: string;
  serving_size: number;
  serving_unit: string;
  claimed_protein: number;
  effective_protein: number;
  bioavailability_score: number;
  transparency_score: number;
  ingredients: Ingredient[];
  blend_ratios?: BlendRatio[];
  pdcaas_score?: number;
  diaas_score?: number;
  created_at: string;
  updated_at: string;
  verified_by?: string[];
}

export interface Ingredient {
  id: string;
  name: string;
  type: IngredientType;
  protein_content: number; // percentage
  bioavailability: number; // 0-1 scale
  amino_acid_profile: AminoAcidProfile;
  allergens: string[];
  source: 'plant' | 'animal' | 'synthetic';
}

export interface BlendRatio {
  ingredient_id: string;
  percentage: number;
  confidence: number; // 0-1 scale for estimation confidence
  source: 'disclosed' | 'estimated' | 'community_verified';
}

export interface AminoAcidProfile {
  lysine: number;
  methionine: number;
  cysteine: number;
  threonine: number;
  tryptophan: number;
  isoleucine: number;
  leucine: number;
  valine: number;
  phenylalanine: number;
  tyrosine: number;
  histidine: number;
}

export interface Contribution {
  id: string;
  user_id: string;
  product_id: string;
  type: ContributionType;
  data: ContributionData;
  status: 'pending' | 'approved' | 'rejected' | 'needs_review';
  verification_votes: VerificationVote[];
  created_at: string;
  updated_at: string;
}

export interface VerificationVote {
  user_id: string;
  vote: 'approve' | 'reject' | 'needs_changes';
  comment?: string;
  created_at: string;
}

export interface SearchFilters {
  category?: ProductCategory;
  min_transparency_score?: number;
  max_price?: number;
  min_effective_protein?: number;
  allergens?: string[];
  source?: ('plant' | 'animal' | 'synthetic')[];
  sort_by?: 'transparency' | 'cost_efficiency' | 'effective_protein' | 'price';
  sort_order?: 'asc' | 'desc';
}

export interface SearchResult {
  products: Product[];
  total_count: number;
  page: number;
  per_page: number;
  filters_applied: SearchFilters;
}

export interface CacheEntry<T> {
  data: T;
  timestamp: number;
  ttl: number;
  hits: number;
}

export interface ApiResponse<T> {
  success: boolean;
  data?: T;
  error?: string;
  message?: string;
}

export interface PaginationParams {
  page: number;
  per_page: number;
  offset: number;
}

// Enums
export type ProductCategory =
  | 'protein'
  | 'pre-workout'
  | 'energy-drink'
  | 'bcaa'
  | 'eaa'
  | 'fat-burner'
  | 'appetite-suppressant';

export type IngredientType =
  | 'protein_source'
  | 'carbohydrate'
  | 'fat'
  | 'vitamin'
  | 'mineral'
  | 'amino_acid'
  | 'sweetener'
  | 'flavoring'
  | 'preservative'
  | 'other';

export type ContributionType =
  | 'blend_ratios'
  | 'ingredient_list'
  | 'nutrition_facts'
  | 'product_image'
  | 'price_update'
  | 'transparency_improvement';

export type ContributionData =
  | BlendRatio[]
  | Ingredient[]
  | { [key: string]: any } // nutrition facts
  | string // image URL
  | { transparency_notes: string; improvements: string[] };

// Utility types
export type SortField = keyof Pick<
  Product,
  | 'transparency_score'
  | 'effective_protein'
>;
export type SortOrder = 'asc' | 'desc';

// Form types
export interface ProductFormData {
  name: string;
  brand: string;
  category: ProductCategory;
  description?: string;
  serving_size: number;
  serving_unit: string;
  claimed_protein: number;
  ingredients: string[];
  blend_ratios?: { ingredient: string; percentage: number }[];
}

export interface ContributionFormData {
  product_id: string;
  type: ContributionType;
  data: any;
  notes?: string;
}

// Database schema types (will be generated by Supabase)
export interface Database {
  public: {
    Tables: {
      users: {
        Row: User;
        Insert: Omit<User, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<User, 'id' | 'created_at' | 'updated_at'>>;
      };
      products: {
        Row: Product;
        Insert: Omit<Product, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Product, 'id' | 'created_at' | 'updated_at'>>;
      };
      contributions: {
        Row: Contribution;
        Insert: Omit<Contribution, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<Contribution, 'id' | 'created_at' | 'updated_at'>>;
      };
    };
  };
}
